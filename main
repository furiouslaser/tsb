local uis = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local chatservice = game:GetService("Chat")
TeleportService = game:GetService("TeleportService")
local prefix = ";"
local Players = game.Players
PlaceId = game.PlaceId
local enabled = false
local commands = {
    to = "to",
    bring = "bring",
    rejoin = "rejoin",
    void = "void",
    view = "view",
    unview = "unview"
}
local camera = workspace.CurrentCamera
local mountains = CFrame.new(445, 685, 368)
local atomic = CFrame.new(1080, 20, 23000)
local Void = CFrame.new(-3729, 2388, 31933)
local function autofill(abbreviation)
    for i,v in ipairs(game:GetService("Players"):GetPlayers()) do
        if v.Name:lower():sub(1, abbreviation:len()) == abbreviation:lower() or v.DisplayName:lower():sub(1, abbreviation:len()) == abbreviation:lower() then
            return v
        end
    end
end

mouse.Button1Down:Connect(function()
    if uis:IsKeyDown(Enum.KeyCode.R) then
        local targetPosition = mouse.Hit.p
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end)

player.Chatted:Connect(function(msg)
    local split = string.split(msg, " ")
    if string.lower(split[1]) == prefix..commands.view then
    local Player = autofill(split[2])
     if Player then
                camera.CameraSubject = Player.Character.Humanoid
            end
        end
    if string.lower(split[1]) == prefix..commands.unview then
            camera.CameraSubject = player.Character.Humanoid
        end
    if string.lower(split[1]) == prefix..commands.to then
        local Player = autofill(split[2])
        if Player then
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 2
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))        end
    end
    if string.lower(split[1]) == prefix..commands.bring then
    local Player = autofill(split[2])
     if Player then
        local pos = player.Character.PrimaryPart.CFrame
        game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.One, false, nil)
        wait(0.3)
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 2
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))
        task.wait(0.3)
        player.Character:SetPrimaryPartCFrame(pos)
            end
        end
        if string.lower(split[1]) == prefix..commands.void then
    local Player = autofill(split[2])
     if Player then
        local pos = player.Character.PrimaryPart.CFrame
        game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.One, false, nil)
        wait(0.3)
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 1
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))
        task.wait(0.3)
        player.Character:SetPrimaryPartCFrame(Void)
	task.wait(3)
	player.Character:SetPrimaryPartCFrame(pos)
            end
        end
 if string.lower(split[1]) == prefix..commands.rejoin then
        Players.LocalPlayer:Kick("\nRejoining...")
		wait()
		TeleportService:Teleport(PlaceId, Players.LocalPlayer)
        end
end)

local function buttonpress(button, gameP)
    if not gameP then
        if button.KeyCode == Enum.KeyCode.X then
            
            local pos = player.Character.PrimaryPart.CFrame
            local trashcans = {} 
            for _, obj in pairs(game.Workspace.Map.Trash:GetChildren()) do
                if obj.Name == "Trashcan" and obj:IsA("Model") then
                    if obj.Trashcan.CanCollide == true then
                    table.insert(trashcans, obj)  
                    print(obj)
                    print(obj.Trashcan.CanCollide)
                    end
                end
            end
            if #trashcans > 0 then
                if enabled == false then
                enabled = true
                local randomTrashcan = trashcans[math.random(1, #trashcans)] 
                print(randomTrashcan)
                local lookDirection = randomTrashcan.Trashcan.CFrame.LookVector
                local behindPosition = randomTrashcan.Trashcan.Position - lookDirection * 3
                mouse1press()
                while not player.Character:FindFirstChild("Trash Can") do 
                task.wait(0.1)
                player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, randomTrashcan.Trashcan.Position))
                end              
                mouse1release()
                task.wait(0.5)
                wait(0.1)
                player.Character:SetPrimaryPartCFrame(pos)
                enabled = false
            else
                print("No trashcans found.")
            end
            end
        end
        if button.KeyCode == Enum.KeyCode.C then
            player.Character:SetPrimaryPartCFrame(atomic)
        end
        if button.KeyCode == Enum.KeyCode.T then
            player.Character:SetPrimaryPartCFrame(mountains)
        end
    end
end


uis.InputBegan:Connect(buttonpress)
