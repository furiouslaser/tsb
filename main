local uis = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local chatservice = game:GetService("Chat")
local TeleportService = game:GetService("TeleportService")
local prefix = ";"
local Players = game.Players
local PlaceId = game.PlaceId
local enabled = false
local speeding = false
local goingto = false
local standing = false
local targetPlayer = nil
local camera = workspace.CurrentCamera
local keydown = false
local commands = {
    to = "to",
    bring = "bring",
    rejoin = "rejoin",
    void = "void",
    view = "view",
    unview = "unview",
    loopto = "lt",
    unloopto = "unlt",
    stand = "stand",
    unstand = "unstand",
    speed = "speed",
    unspeed = "unspeed",
    reset = "reset"
}
local goingto = false
local camera = workspace.CurrentCamera
local mountains = CFrame.new(445, 685, 368)
local atomic = CFrame.new(1080, 20, 23000)
local Void = CFrame.new(-3729, 2388, 31933)
local StarterGui = game:GetService("StarterGui")

local messages = {
    "⭐ furiouslaser tsb admin script!",
    "🎟️ Commands:",
    "🔹 Press X to grab a trash can!",
    "🔹 Press T to teleport to the mountain!",
    "🔹 Press C to teleport to the atomic samurai room!"
}

local function sendChatMessage(text, color)
    StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = text,
        Color = color,
        Font = Enum.Font.SourceSansBold,
        FontSize = Enum.FontSize.Size24
    })
end

-- Send initial messages
for _, msg in ipairs(messages) do
    sendChatMessage(msg, Color3.fromRGB(255, 255, 0))
end

-- Send commands
for command, alias in pairs(commands) do
    sendChatMessage("🔹 " .. command .. " - ;" .. alias, Color3.fromRGB(255, 255, 255))
end
local function autofill(abbreviation)
    for i,v in ipairs(game:GetService("Players"):GetPlayers()) do
        if v.Name:lower():sub(1, abbreviation:len()) == abbreviation:lower() or v.DisplayName:lower():sub(1, abbreviation:len()) == abbreviation:lower() then
            return v
        end
    end
end

mouse.Button1Down:Connect(function()
    if uis:IsKeyDown(Enum.KeyCode.R) then
        local targetPosition = mouse.Hit.p
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end)

player.Chatted:Connect(function(msg)
    local split = string.split(msg, " ")
    if string.lower(split[1]) == prefix..commands.stand then
    local target = autofill(split[2])
    if target then
        standing = true
        targetPlayer = target
        task.spawn(function()
            while standing do
                if targetPlayer and targetPlayer.Character then
                    local lookDirection = targetPlayer.Character.PrimaryPart.CFrame.LookVector
                    local rightVector = targetPlayer.Character.PrimaryPart.CFrame.RightVector
                    local behindPosition = targetPlayer.Character.PrimaryPart.Position - lookDirection * 4
                    local rightPosition = behindPosition + rightVector * 2
                    player.Character:SetPrimaryPartCFrame(CFrame.new(rightPosition, rightPosition + lookDirection))
                end
                task.wait()
            end
        end)
    end
end
    if string.lower(split[1]) == prefix..commands.unstand then
        standing = false
        targetPlayer = nil
    end
    if string.lower(split[1]) == prefix..commands.view then
    local Player = autofill(split[2])
     if Player then
                camera.CameraSubject = Player.Character.Humanoid
            end
        end
    if string.lower(split[1]) == prefix..commands.unview then
            camera.CameraSubject = player.Character.Humanoid
        end
    if string.lower(split[1]) == prefix..commands.to then
        local Player = autofill(split[2])
        if Player then
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 2
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))        end
    end
    if string.lower(split[1]) == prefix..commands.bring then
    local Player = autofill(split[2])
     if Player then
        local pos = player.Character.PrimaryPart.CFrame
        game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.One, false, nil)
        wait(0.3)
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 2
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))
        task.wait(0.3)
        player.Character:SetPrimaryPartCFrame(pos)
            end
        end
        if string.lower(split[1]) == prefix..commands.void then
    local Player = autofill(split[2])
     if Player then
        local pos = player.Character.PrimaryPart.CFrame
        game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.One, false, nil)
        wait(0.3)
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 1
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))
        task.wait(0.3)
        player.Character:SetPrimaryPartCFrame(Void)
	task.wait(3)
	player.Character:SetPrimaryPartCFrame(pos)
            end
        end
 if string.lower(split[1]) == prefix..commands.rejoin then
        Players.LocalPlayer:Kick("\nRejoining...")
		wait()
		TeleportService:Teleport(PlaceId, Players.LocalPlayer)
        end
if string.lower(split[1]) == prefix..commands.speed then
            local speed = split[2]
	    if speed then
            speeding = false
            speeding = true
            while speeding do wait()
            player.Character.Humanoid.WalkSpeed = speed
        end
	end
        end
	if string.lower(split[1]) == prefix..commands.unspeed then
            speeding = false
            player.Character.Humanoid.WalkSpeed = 16
        end
if string.lower(split[1]) == prefix..commands.reset then
            player.Character.Humanoid.Health = 0
        end
if string.lower(split[1]) == prefix..commands.loopto then
         local Player = autofill(split[2])
        if Player then
        	goingto = true
        	while goingto do wait()
        local lookDirection = Player.Character.PrimaryPart.CFrame.LookVector
        local behindPosition = Player.Character.PrimaryPart.Position - lookDirection * 2
        player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, Player.Character.PrimaryPart.Position))        
		end
	end
    end
if string.lower(split[1]) == prefix..commands.unloopto then
            goingto = false
        end
end)

local function moveInFront()
    if standing and targetPlayer and targetPlayer.Character then
        standing = false 
        local startTime = tick()  -- Record the current time
       
        while keydown do task.wait()
        local lookDirection = targetPlayer.Character.PrimaryPart.CFrame.LookVector
        local frontPosition = targetPlayer.Character.PrimaryPart.Position + lookDirection * 7
        player.Character:SetPrimaryPartCFrame(CFrame.new(frontPosition, frontPosition + lookDirection))
        end
        standing = true
        task.spawn(function()
            while standing do
                if targetPlayer and targetPlayer.Character then
                    local lookDirection = targetPlayer.Character.PrimaryPart.CFrame.LookVector
                    local rightVector = targetPlayer.Character.PrimaryPart.CFrame.RightVector
                    local behindPosition = targetPlayer.Character.PrimaryPart.Position - lookDirection * 4
                    local rightPosition = behindPosition + rightVector * 2
                    player.Character:SetPrimaryPartCFrame(CFrame.new(rightPosition, rightPosition + lookDirection))
                end
                task.wait()
            end
        end)
    end
end
uis.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if (input.UserInputType == Enum.UserInputType.MouseButton1 or
	 input.KeyCode == Enum.KeyCode.F or
        input.KeyCode == Enum.KeyCode.One or
        input.KeyCode == Enum.KeyCode.Two or
        input.KeyCode == Enum.KeyCode.Three or
        input.KeyCode == Enum.KeyCode.Four) and standing then
	keydown = true
        moveInFront()
    end
end)
uis.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if (input.UserInputType == Enum.UserInputType.MouseButton1 or
	 input.KeyCode == Enum.KeyCode.F or
        input.KeyCode == Enum.KeyCode.One or
        input.KeyCode == Enum.KeyCode.Two or
        input.KeyCode == Enum.KeyCode.Three or
        input.KeyCode == Enum.KeyCode.Four) then
        keydown = false
    end
end)
local function buttonpress(button, gameP)
    if not gameP then
        if button.KeyCode == Enum.KeyCode.X then
            
            local pos = player.Character.PrimaryPart.CFrame
            local trashcans = {} 
            for _, obj in pairs(game.Workspace.Map.Trash:GetChildren()) do
                if obj.Name == "Trashcan" and obj:IsA("Model") then
                    if obj.Trashcan.CanCollide == true then
                    table.insert(trashcans, obj)  
                    print(obj)
                    print(obj.Trashcan.CanCollide)
                    end
                end
            end
            if #trashcans > 0 then
                if enabled == false then
                enabled = true
                local randomTrashcan = trashcans[math.random(1, #trashcans)] 
                print(randomTrashcan)
                local lookDirection = randomTrashcan.Trashcan.CFrame.LookVector
                local behindPosition = randomTrashcan.Trashcan.Position - lookDirection * 3
                mouse1press()
                while not player.Character:FindFirstChild("Trash Can") do 
                task.wait(0.1)
                player.Character:SetPrimaryPartCFrame(CFrame.new(behindPosition, randomTrashcan.Trashcan.Position))
                end              
                mouse1release()
                task.wait(0.5)
                wait(0.1)
                player.Character:SetPrimaryPartCFrame(pos)
                enabled = false
            else
                print("No trashcans found.")
            end
            end
        end
        if button.KeyCode == Enum.KeyCode.C then
            player.Character:SetPrimaryPartCFrame(atomic)
        end
        if button.KeyCode == Enum.KeyCode.T then
            player.Character:SetPrimaryPartCFrame(mountains)
        end
    end
end


uis.InputBegan:Connect(buttonpress)
